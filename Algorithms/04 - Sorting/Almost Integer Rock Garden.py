#!/bin/python3

if __name__ == '__main__':
    first_multiple_input = input().rstrip().split()

    x = int(first_multiple_input[0])

    y = int(first_multiple_input[1])

    # Write your code here
    solutions = [{(7, 11), (11, 1), (-2, 12), (5, 4), (12, -3), (10, 3), (9, 6), (-12, -7), (1, 11), (-6, -6), (12, -4),
                  (4, 12)},
                 {(-12, 8), (9, -6), (10, 5), (-5, 1), (3, 3), (3, 1), (-10, -2), (2, 1), (7, 5), (2, 2), (6, 5),
                  (9, 7)},
                 {(10, 5), (-2, 1), (3, 3), (3, 1), (10, 2), (-7, -5), (12, 8), (2, 2), (6, -5), (5, 1), (-9, 6),
                  (9, 7)},
                 {(10, 2), (-2, 2), (12, 6), (3, -1), (-11, 3), (-7, -5), (2, 2), (5, 1), (9, 6), (1, 1), (6, 5),
                  (12, 8)},
                 {(9, 7), (3, 2), (-10, 2), (-5, 1), (7, 1), (7, -5), (3, 1), (-9, -6), (4, 2), (9, 6), (6, 5), (8, 4)},
                 {(7, 3), (-12, -7), (6, -3), (11, 5), (12, 7), (9, 3), (7, 7), (-12, 7), (-3, 2), (10, 1), (4, 2),
                  (9, 7)},
                 {(7, 3), (10, 8), (-5, 1), (11, 4), (9, 1), (10, 6), (-11, -2), (12, 11), (6, -6), (12, 10), (-11, 7),
                  (10, 9)},
                 {(9, 7), (-9, -1), (12, 7), (-10, 4), (-3, 1), (11, 1), (12, 8), (8, -4), (12, 10), (10, 3), (1, 1),
                  (5, 3)},
                 {(11, 7), (3, 2), (10, 8), (11, 4), (9, 2), (-11, 1), (11, 2), (-7, 6), (-11, -1), (10, -8), (10, 1),
                  (12, 11)},
                 {(10, 8), (8, 3), (10, 5), (8, 1), (10, 6), (12, 6), (-11, 8), (-10, 5), (11, -5), (10, 3), (-11, -8),
                  (12, 8)},
                 {(12, 2), (8, 3), (-4, 4), (10, 4), (8, 1), (-10, -5), (10, 6), (9, 3), (7, 5), (-12, 8), (7, -4),
                  (5, 2)},
                 {(-9, 4), (11, 4), (12, 1), (8, 2), (7, 1), (-10, -8), (3, 1), (9, -4), (12, 4), (9, 4), (-12, 4),
                  (4, 1)},
                 {(10, 8), (12, 1), (11, 4), (5, 5), (-9, -4), (3, 1), (9, -4), (-6, 2), (6, 2), (9, 4), (-12, 4),
                  (12, 3)},
                 {(9, 7), (-12, 12), (-9, 5), (6, 1), (10, 6), (-10, -6), (9, -9), (8, 7), (9, 4), (8, 5), (10, 9),
                  (5, 3)},
                 {(-9, 4), (10, 10), (6, 1), (10, 6), (-11, -3), (10, -6), (8, 7), (-11, 11), (9, 5), (8, 5), (10, 9),
                  (5, 3)},
                 {(6, 4), (9, 7), (5, 5), (3, 1), (3, -2), (-7, -5), (-3, 2), (-12, 6), (5, 1), (9, 6), (6, 5),
                  (10, 2)},
                 {(8, -7), (3, 2), (5, 1), (-9, -1), (10, 7), (9, 2), (-7, 5), (11, 3), (-11, 4), (6, 2), (12, 10),
                  (11, 6)},
                 {(11, 4), (8, 2), (-12, -10), (11, 8), (8, 1), (9, 8), (9, 9), (-12, 10), (-7, 2), (12, -10), (11, 6),
                  (8, 4)},
                 {(10, 8), (12, 1), (9, 1), (7, 6), (9, 3), (11, 9), (2, 1), (-12, 11), (9, -4), (12, 11), (-6, 6),
                  (-10, -1)},
                 {(7, 3), (11, 10), (11, 5), (10, 7), (-8, -5), (-8, 5), (11, 3), (8, -5), (7, 5), (9, 5), (-9, 6),
                  (6, 5)},
                 {(12, 2), (9, 2), (10, 7), (-9, -4), (11, 9), (10, 6), (-12, 11), (9, -3), (8, 8), (11, 1), (-7, 2),
                  (7, 2)}]

    solutions2 = []
    for sol in solutions:
        solutions2.append(list(map(lambda p: (p[0], -p[1]), sol)))
    solutions += solutions2

    solutions2 = []
    for sol in solutions:
        solutions2.append(list(map(lambda p: (-p[0], p[1]), sol)))
    solutions += solutions2

    solutions2 = []
    for sol in solutions:
        solutions2.append(list(map(lambda p: (p[1], p[0]), sol)))
    solutions += solutions2

    for sol in solutions:
        if (x, y) in sol:
            for p in sol:
                if p != (x, y):
                    print(p[0], p[1])
            break
